# Background Remover API - Environment Configuration Template
# Copy this file to .env and customize as needed

# =============================================================================
# FLASK CONFIGURATION
# =============================================================================
FLASK_APP=app.py
FLASK_ENV=development
DEBUG=True
HOST=0.0.0.0
PORT=5001

# =============================================================================
# APPLICATION INFO
# =============================================================================
APP_NAME=Background Remover API
APP_VERSION=1.0.0

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
LOG_FILE=bg_remover.log

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# Default limits for all endpoints (unless overridden)
RATE_LIMIT_DEFAULT_PER_HOUR=1000
RATE_LIMIT_DEFAULT_PER_MINUTE=100

# Specific endpoint limits (requests per minute)
RATE_LIMIT_REMOVE_BG_PER_MINUTE=10    # Background removal (heavy processing)
RATE_LIMIT_PREVIEW_PER_MINUTE=15      # Preview endpoint
RATE_LIMIT_BASE64_PER_MINUTE=12       # Base64 processing
RATE_LIMIT_HEALTH_PER_MINUTE=200      # Health checks
RATE_LIMIT_INFO_PER_MINUTE=60         # API info endpoint

# Rate limiting storage backend
# Options: memory (development), redis (production)
RATE_LIMIT_STORAGE=memory

# Redis configuration (only needed if RATE_LIMIT_STORAGE=redis)
REDIS_URL=redis://localhost:6379/0
REDIS_DB=0

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size in bytes (16MB = 16 * 1024 * 1024)
MAX_CONTENT_LENGTH=16777216

# Upload directories
UPLOAD_FOLDER=uploads
OUTPUT_FOLDER=outputs

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# CORS origins (comma-separated, use * for all origins)
# Examples:
#   CORS_ORIGINS=*                           # Allow all origins (development)
#   CORS_ORIGINS=http://localhost:3000       # Allow specific domain
#   CORS_ORIGINS=https://yourdomain.com,https://app.yourdomain.com  # Multiple domains
CORS_ORIGINS=*

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
# Auto-cleanup interval for temporary files (in hours)
CLEANUP_INTERVAL_HOURS=1

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. Copy this file to .env:
#    cp .env.sample .env
#
# 2. Customize values in .env for your environment
#
# 3. For production deployment:
#    - Set DEBUG=False
#    - Use RATE_LIMIT_STORAGE=redis
#    - Set appropriate CORS_ORIGINS
#    - Consider stricter rate limits
#
# 4. Security considerations:
#    - Never commit .env to version control
#    - Keep Redis secure in production
#    - Use environment-specific CORS origins
#    - Monitor rate limit violations
#
# 5. Performance tips:
#    - Use Redis for production rate limiting
#    - Adjust limits based on server capacity
#    - Monitor file cleanup performance
#    - Consider CDN for static assets